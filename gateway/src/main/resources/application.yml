server:
  port: 8763

spring:
  application:
    # 该服务的名称，同时也是注册到eureka上的应用名称
    name: gateway
  redis:
    enabled: true # Redis switch / off by default
    database: 0 # Redis database index (default is 0)
    host: 127.0.0.1 # Redis server address
    port: 6379 # Redis server connection port
    password:  #redis password
    timeout: 5000
  cloud:
    gateway:
      # 关闭gateway，默认为false
      enabled: true
      discovery:
        locator:
          # 是否与服务注册与发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为 false
          enabled: true
      routes:
        - id: user
          uri: http://user:9101
          predicates:
            - Path=/user/**
          filters:
            # StripPrefix Filter 是一个请求路径截取的功能,StripPrefix=n,n代表截取路径的个数
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@hostAddrKeyResolver}' # 用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象
                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充平均速率
                redis-rate-limiter.burstCapacity: 3 # 令牌桶总容量
        - id: article
          uri: http://localhost:9111
          predicates:
            - Path=/article/**
          filters:
            # StripPrefix Filter 是一个请求路径截取的功能,StripPrefix=n,n代表截取路径的个数
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@hostAddrKeyResolver}' # 用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象
                redis-rate-limiter.replenishRate: 1 # 令牌桶每秒填充平均速率
                redis-rate-limiter.burstCapacity: 3 # 令牌桶总容量

eureka:
  client:
    enabled: true
    service-url:
      defaultZone: http://root:root@localhost:8761/eureka/,http://root:root@localhost:8762/eureka/
    instances:
      # 将自己的IP注册到eureka server，如不配或配置为false，则将微服务所在操作系统的hostname注册到eureka server
      prefer-ip-address: true